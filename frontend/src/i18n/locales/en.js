export default {
  common: {
    language: 'Language',
    english: 'English',
    chinese: 'Chinese',
    home: 'Home',
    storyGeneration: 'Story Generation',
    reportGeneration: 'Report Generation',
    about: 'About',
    generate: 'Generate',
    loading: 'Loading...',
    error: 'Error',
    success: 'Success',
    submit: 'Submit',
    cancel: 'Cancel',
    save: 'Save',
    delete: 'Delete',
    edit: 'Edit',
    view: 'View',
    refresh: 'Refresh',
    back: 'Back',
    apiSettings: 'API Settings'
  },
  header: {
  },
  storyGeneration: {
    title: 'Creative Story Generation',
    description: 'Generate creative stories using our heterogeneous recursive planning framework. Provide a prompt describing the story you want to create, and our system will recursively plan and generate coherent narratives.',
    promptLabel: 'Story Prompt',
    promptPlaceholder: 'Describe the story you want to generate...',
    modelLabel: 'Model',
    modelPlaceholder: 'Enter or select a model',
    modelHelperText: 'Enter any model name or select from suggestions',
    languageOutputLabel: 'Output Language',
    languageOutputHelperText: 'Select the language for the generated story',
    outputEnglish: 'English Output',
    outputChinese: 'Chinese Output',
    apiKeySettings: 'API Settings',
    apiKeyInfo: 'Your API keys are stored locally in your browser and never sent to our servers',
    openaiApiKey: 'OpenAI API Key',
    openaiHelperText: 'Required for GPT models',
    claudeApiKey: 'Anthropic Claude API Key',
    claudeHelperText: 'Required for Claude models',
    apiKeyPrivacyNote: 'Your API keys are securely stored in your browser\'s local storage and are never sent to our servers. They are only used to call the respective services\' APIs directly from your browser.',
    generateStory: 'Generate Story',
    noPromptError: 'Please provide a story generation prompt.',
    noOpenAIKeyError: 'Please provide your OpenAI API key in the settings section.',
    noClaudeKeyError: 'Please provide your Anthropic Claude API key in the settings section.',
    connectionError: 'Unable to connect to the backend server. Please ensure it is running at http://localhost:5002.',
    initiatingGeneration: 'Initiating story generation...',
    generationSuccess: 'Story generation successfully initiated!',
    examplePromptsTitle: 'Example Prompts',
    examplePromptsSubtitle: 'Click any example to use it as your prompt:',
    tipsTitle: 'Tips for Effective Story Prompts',
    beSpecificTitle: 'Be Specific',
    beSpecificDescription: 'Provide specific details about the characters, settings, and plot elements you want in your story.',
    defineParametersTitle: 'Define Parameters',
    defineParametersDescription: 'Specify your desired story perspective (first-person, third-person), tone (humorous, serious), and length.',
    allowCreativityTitle: 'Allow Creativity',
    allowCreativityDescription: 'While providing guidance, leave room for the system to develop creative elements that enhance the story.',
    examplePrompt1: 'Write a story about a day where the sun doesn\'t rise. Tell the story from the third person perspective. Include a story about a girl who is playing outside when the sun vanishes.',
    examplePrompt2: 'Write a science fiction story about the first human colony on Mars facing an unexpected discovery beneath the planet\'s surface.',
    examplePrompt3: 'Write a mystery story set in a small coastal town where strange phenomena occur every full moon. The protagonist is a skeptical journalist investigating the events.',
    errors: {
      emptyPrompt: 'Please provide a story generation prompt.',
      missingOpenAIKey: 'Please provide your OpenAI API key in the settings section.',
      missingClaudeKey: 'Please provide your Anthropic Claude API key in the settings section.',
      backendConnection: 'Unable to connect to the backend server. Please ensure it is running at http://localhost:5002.',
      generationError: 'Error starting story generation:',
      unknown: 'Unknown error',
      noTaskId: 'Server did not return a task ID'
    },
    status: {
      initiating: 'Initiating story generation...',
      started: 'Story generation successfully initiated!'
    }
  },
  reportGeneration: {
    title: 'Report Generation',
    description: 'Generate comprehensive reports on any topic using our heterogeneous recursive planning framework with search capabilities. Our system will research, plan, and create well-structured reports based on your requirements.',
    promptLabel: 'Report Topic',
    promptPlaceholder: 'Describe the report you want to generate...',
    modelLabel: 'Model',
    modelPlaceholder: 'Enter or select a model',
    modelHelperText: 'Enter any model name or select from suggestions',
    enableSearchLabel: 'Enable Search',
    enableSearchDescription: 'Allow the system to search the web for up-to-date information',
    searchEngineLabel: 'Search Engine',
    languageOutputLabel: 'Output Language',
    languageOutputHelperText: 'Select the language for the generated report',
    serpapiKeyLabel: 'SerpAPI Key',
    serpapiHelperText: 'Required for web search functionality',
    generateReport: 'Generate Report',
    examplePromptsTitle: 'Example Topics',
    examplePromptsSubtitle: 'Click any example to use it as your prompt:',
    tipsTitle: 'Tips for Effective Report Prompts',
    defineScopeTitle: 'Define Scope',
    defineScopeDescription: 'Clearly specify the scope and focus of the report to ensure content meets your specific needs.',
    indicateStructureTitle: 'Indicate Structure',
    indicateStructureDescription: 'Mention in your prompt if you have specific requirements for the report structure or sections.',
    specifyDepthTitle: 'Specify Depth',
    specifyDepthDescription: 'Indicate whether you need a general overview or an in-depth analysis with technical details and citations.',
    examplePrompt1: 'What is the commercial value of a long-article writing AI Agent? Write a detailed analysis report.',
    examplePrompt2: 'Write a comprehensive report on the impact of artificial intelligence on healthcare, focusing on diagnosis, treatment planning, and patient outcomes.',
    examplePrompt3: 'Prepare a detailed report on sustainable energy solutions for developing countries, including their economic viability and environmental impact.',
    errors: {
      emptyPrompt: 'Please provide a report generation prompt.',
      missingOpenAIKey: 'Please provide your OpenAI API key in the settings section.',
      missingClaudeKey: 'Please provide your Anthropic Claude API key in the settings section.',
      missingSerpapiKey: 'Please provide your SerpAPI key in the settings section to enable search functionality.',
      backendConnection: 'Unable to connect to the backend server. Please ensure it is running at http://localhost:5002.',
      generationError: 'Error starting report generation:',
      unknown: 'Unknown error',
      noTaskId: 'Server did not return a task ID'
    },
    status: {
      initiating: 'Initiating report generation...',
      started: 'Report generation successfully initiated!'
    },
    searchEngines: {
      google: 'Google',
      bing: 'Bing'
    }
  },
  results: {
    title: "Generation Details",
    promptLabel: "Prompt",
    modelUsed: "Model",
    searchEngineUsed: "Search Engine",
    statusLabel: "Status",
    statusCompleted: "Complete",
    statusGenerating: "In Progress",
    complete: "complete",
    secondsElapsed: "seconds elapsed",
    generationTimeEstimate: "This may take several minutes depending on the complexity of the task.",
    generatedStory: "Generated Story",
    generatedReport: "Generated Report",
    resultTitle: "Result",
    taskGraphTitle: "Task Graph",
    copyToClipboard: "Copy to Clipboard",
    downloadAsText: "Download as Text",
    downloadAsMarkdown: "Download as Markdown",
    returnToGenerator: "Generate Another"
  },
  history: {
    title: 'Generation History',
    empty: 'No generation history found.',
    recentGenerations: 'Recent Generations',
    loadMore: 'Load More',
    storyType: 'Story',
    reportType: 'Report',
    deleteConfirm: 'Are you sure you want to delete this generation?',
    deleted: 'Generation successfully deleted'
  },
  home: {
    advancedAIWriting: "Advanced AI Writing Framework",
    title: "Open Framework for Human-like Long-form Writing",
    description: "A general agent framework for long-form writing that achieves adaptive content generation through recursive task decomposition and dynamic integration of heterogeneous tasks/tools.",
    getStarted: "Get Started",
    learnMore: "Learn More",
    howItWorks: "How It Works",
    howItWorksDescription: "Heterogeneous Recursive Planning goes beyond traditional writing approaches by mimicking human cognitive processes through adaptive task decomposition.",
    retrieval: "Retrieval",
    retrievalDescription: "Dynamically searches for relevant information during the writing process, ensuring factual accuracy and comprehensive coverage of the topic.",
    reasoning: "Reasoning",
    reasoningDescription: "Applies logical analysis to plan, organize, and refine content structure, ensuring coherent and well-structured output that follows a logical flow.",
    composition: "Composition",
    compositionDescription: "Generates articulate and engaging content based on the retrieved information and reasoning, adapting to context and maintaining consistent style and tone.",
    generateContent: "Generate Content",
    generateContentDescription: "Choose the type of content you want to create and experience the power of heterogeneous recursive planning.",
    creativeStoryGeneration: "Creative Story Generation",
    craftNarratives: "Craft engaging narratives and fiction",
    storyDescription: "Generate creative narratives, fiction, and stories using our heterogeneous recursive planning approach. Perfect for creative writing, entertainment, and educational content.",
    fiction: "Fiction",
    shortStories: "Short Stories",
    creativeWriting: "Creative Writing",
    generateStory: "Generate Story",
    technicalReportGeneration: "Technical Report Generation",
    createDocuments: "Create comprehensive, fact-based documents",
    reportDescription: "Create comprehensive technical reports and documentation with accurate information retrieval and logical reasoning. Ideal for business, academic, and technical documentation.",
    research: "Research",
    analysis: "Analysis",
    documentation: "Documentation",
    generateReport: "Generate Report",
    visualizeProcess: "Visualize the Writing Process",
    visualizeDescription: "Our framework makes the writing process transparent by providing a detailed task list showing how complex writing tasks are broken down into manageable sub-tasks that integrate retrieval, reasoning, and composition.",
    step1: "Initial decomposition of the main writing task",
    step2: "Recursive planning and subtask generation",
    step3: "Dynamic integration of retrieval, reasoning, and composition",
    step4: "Content generation with coherent, high-quality output",
    readyToTransform: "Ready to transform your writing process?",
    transformDescription: "Experience the next generation of AI-assisted writing with our heterogeneous recursive planning framework.",
    tryStoryGeneration: "Try Story Generation",
    tryReportGeneration: "Try Report Generation"
  },
  about: {
    title: "About the Project",
    introduction: "Heterogeneous Recursive Planning represents a significant advancement in AI-powered content generation, enabling more adaptive and human-like writing through innovative task decomposition and planning.",
    overview: "Overview",
    overviewDescription: "Heterogeneous Recursive Planning is a general agent framework for long-form writing that achieves human-like adaptive writing through recursive task decomposition and dynamic integration of three fundamental task types: retrieval, reasoning, and composition.",
    traditionalApproach: "Unlike traditional approaches that rely on predetermined workflows and rigid thinking patterns, this framework:",
    feature1: "Eliminates workflow restrictions through a planning mechanism that interleaves recursive task decomposition and execution",
    feature2: "Facilitates heterogeneous task decomposition by integrating different task types",
    feature3: "Adapts dynamically during the writing process, similar to human writing behavior",
    evaluationResult: "Our evaluations on both fiction writing and technical report generation demonstrate that this method consistently outperforms state-of-the-art approaches across all evaluation metrics.",
    keyFeatures: "Key Features",
    recursiveTask: "Recursive task decomposition and execution",
    recursiveTaskDesc: "Breaking complex writing tasks into manageable sub-tasks",
    dynamicIntegration: "Dynamic integration of diverse task types",
    dynamicIntegrationDesc: "Seamlessly combining retrieval, reasoning, and composition",
    flexibleAdaptation: "Flexible adaptation during writing",
    flexibleAdaptationDesc: "Adjusting the plan as context evolves",
    multiDomainSupport: "Support for multiple writing domains",
    multiDomainSupportDesc: "Works for both creative fiction and technical reports",
    technicalImplementation: "Technical Implementation",
    taskGraphDesc: "The framework is built on a task graph architecture that represents writing tasks as nodes with dependencies. Each node can be one of three types:",
    compositionType: "Composition (Write)",
    compositionTypeDesc: "Creating actual content",
    retrievalType: "Retrieval (Search)",
    retrievalTypeDesc: "Gathering information",
    reasoningType: "Reasoning (Think)",
    reasoningTypeDesc: "Analyzing and planning",
    systemImplementation: "The system uses advanced language models (LLMs) like GPT-4 and Claude to execute these tasks, with a recursive planning mechanism that can decompose tasks and adapt plans dynamically.",
    researchPublication: "Research Publication",
    paperIntro: "This project is based on research described in the paper:",
    projectTeam: "Project Team"
  }
}; 